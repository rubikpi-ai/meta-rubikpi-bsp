From 3acd2fa79fae336080c99e7f692dfdd8f33ff7c0 Mon Sep 17 00:00:00 2001
From: Aswin Murugan <quic_aswinm@quicinc.com>
Date: Fri, 14 Feb 2025 13:26:25 +0530
Subject: [PATCH] PENDING: Setting bootargs in bootqli command

Added support to set bootargs in bootqli command to update fs partition

Signed-off-by: Aswin Murugan <quic_aswinm@quicinc.com>
Upstream-Status: Pending
---
 cmd/bootqli.c | 26 ++++++++++++++++++++++++--
 1 file changed, 24 insertions(+), 2 deletions(-)

diff --git a/cmd/bootqli.c b/cmd/bootqli.c
index 33ca6170f1..9443c579c0 100644
--- a/cmd/bootqli.c
+++ b/cmd/bootqli.c
@@ -8,6 +8,7 @@
 #include <command.h>
 #include <part.h>
 #include <scsi.h>
+#include <stdlib.h>
 
 #ifdef CONFIG_SYS_MAXARGS
 #define MAX_BOOT_ARGS_SIZE      CONFIG_SYS_MAXARGS
@@ -58,6 +59,27 @@ static int config_select(void)
 
 static int set_bootargs(void)
 {
+	char *cmd_line;
+	char *boot_arg = env_get("bootargs");
+	char *fsboot_arg = env_get("fsbootargs");
+
+	if (!boot_arg && !fsboot_arg)
+		return -1;
+
+	if ((strlen(boot_arg) + strlen(fsboot_arg) > CONFIG_SYS_CBSIZE))
+		return log_msg_ret("bootargs update failed, env size exceeds\n",
+				   -1);
+	cmd_line = malloc(CONFIG_SYS_CBSIZE);
+	if (!cmd_line)
+		return log_msg_ret("cmd_line Memory allocation failed\n", -1);
+
+	snprintf(cmd_line, CONFIG_SYS_CBSIZE, "%s %s",
+		 fsboot_arg, boot_arg);
+
+	env_set("bootargs", cmd_line);
+	if (cmd_line)
+		free(cmd_line);
+
 	return 0;
 }
 
@@ -68,10 +90,10 @@ static int boot_kernel(void)
 	if (boot_config)
 		snprintf(boot_cmd, sizeof(boot_cmd),
 			 "bootm 0x%lx#%s\n",
-			 CONFIG_SYS_LOAD_ADDR, boot_config);
+			 (ulong)CONFIG_SYS_LOAD_ADDR, boot_config);
 	else
 		snprintf(boot_cmd, sizeof(boot_cmd),
-			 "bootm 0x%lx\n", CONFIG_SYS_LOAD_ADDR);
+			 "bootm 0x%lx\n", (ulong)CONFIG_SYS_LOAD_ADDR);
 
 	return run_command(boot_cmd, 0);
 }
-- 
2.34.1

