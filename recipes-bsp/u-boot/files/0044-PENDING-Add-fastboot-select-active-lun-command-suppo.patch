From 398d161d46f802bd381bc21f5e5118f75e6b795b Mon Sep 17 00:00:00 2001
From: Balaji Selvanathan <quic_bselvana@quicinc.com>
Date: Thu, 3 Apr 2025 11:18:34 +0530
Subject: [PATCH] PENDING: Add fastboot select active lun command support

The fastboot command "fastboot flash gpt" operates on LUN4 as
CONFIG_FASTBOOT_FLASH_UFS_DEV is set to 4 in defconfig; So only
LUN4 gpt can be flashed.
Need a fastboot command to allow to select LUN
to flash the corresponding gpt.
Hence, added "fastboot oem select_ufs_active_lun:X" to select
active lun for gpt flash.

Signed-off-by: Balaji Selvanathan <quic_bselvana@quicinc.com>
Upstream-Status: Pending
---
 drivers/fastboot/fb_command.c | 17 +++++++++++++++++
 drivers/fastboot/fb_mmc.c     | 35 +++++++++++++++++++++++++++++++++--
 include/fastboot.h            |  3 +++
 include/fb_mmc.h              |  4 ++++
 4 files changed, 57 insertions(+), 2 deletions(-)

diff --git a/drivers/fastboot/fb_command.c b/drivers/fastboot/fb_command.c
index a6fa8299b8b..c7037760f3d 100644
--- a/drivers/fastboot/fb_command.c
+++ b/drivers/fastboot/fb_command.c
@@ -46,6 +46,10 @@ static void oem_board(char *, char *);
 static void run_ucmd(char *, char *);
 static void run_acmd(char *, char *);
 
+#if defined(CONFIG_FASTBOOT_FLASH_UFS)
+static void select_ufs_active_lun(char *, char *);
+#endif
+
 static const struct {
 	const char *command;
 	void (*dispatch)(char *cmd_parameter, char *response);
@@ -118,6 +122,12 @@ static const struct {
 		.command = "oem board",
 		.dispatch = CONFIG_IS_ENABLED(FASTBOOT_OEM_BOARD, (oem_board), (NULL))
 	},
+#if defined(CONFIG_FASTBOOT_FLASH_UFS)
+	[FASTBOOT_COMMAND_SELECT_UFS_ACTIVE_LUN] = {
+		.command = "oem select_ufs_active_lun",
+		.dispatch = select_ufs_active_lun,
+	},
+#endif
 	[FASTBOOT_COMMAND_UCMD] = {
 		.command = "UCmd",
 		.dispatch = CONFIG_IS_ENABLED(FASTBOOT_UUU_SUPPORT, (run_ucmd), (NULL))
@@ -574,3 +584,10 @@ static void __maybe_unused oem_board(char *cmd_parameter, char *response)
 {
 	fastboot_oem_board(cmd_parameter, (void *)fastboot_buf_addr, image_size, response);
 }
+
+#if defined(CONFIG_FASTBOOT_FLASH_UFS)
+static void select_ufs_active_lun(char *cmd_parameter, char *response)
+{
+	fastboot_select_ufs_active_lun(cmd_parameter, response);
+}
+#endif
diff --git a/drivers/fastboot/fb_mmc.c b/drivers/fastboot/fb_mmc.c
index 9572d997044..3d6b23984c0 100644
--- a/drivers/fastboot/fb_mmc.c
+++ b/drivers/fastboot/fb_mmc.c
@@ -18,15 +18,16 @@
 #include <linux/compat.h>
 #include <android_image.h>
 #include <scsi.h>
+#include <linux/ctype.h>
 
 #define BOOT_PARTITION_NAME "boot"
 
 #if defined(CONFIG_FASTBOOT_FLASH_MMC)
 #define fb_flash_str	"mmc"
-#define fb_flash_dev	CONFIG_FASTBOOT_FLASH_MMC_DEV
+int fb_flash_dev = CONFIG_FASTBOOT_FLASH_MMC_DEV;
 #elif defined(CONFIG_FASTBOOT_FLASH_UFS)
 #define fb_flash_str	"scsi"
-#define fb_flash_dev	CONFIG_FASTBOOT_FLASH_UFS_DEV
+int fb_flash_dev = CONFIG_FASTBOOT_FLASH_UFS_DEV;
 #else
 #error "Incorrect flash type"
 #endif
@@ -769,3 +770,33 @@ void fastboot_mmc_erase(const char *cmd, char *response)
 
 	fastboot_okay(NULL, response);
 }
+
+#if defined(CONFIG_FASTBOOT_FLASH_UFS)
+void fastboot_select_ufs_active_lun(const char *cmd, char *response)
+{
+	struct blk_desc *blk;
+	unsigned long lun;
+	char *endptr;
+	const char *p = cmd;
+
+	/* skip whitespace */
+	while (*p && isblank(*p))
+		p++;
+
+	lun = strtoul(p, &endptr, 10);
+
+	if (*endptr != '\0' || lun > 255) {
+		fastboot_fail("invalid lun number", response);
+		return;
+	}
+
+	if (blk_get_desc(UCLASS_SCSI, lun, &blk)) {
+		fastboot_fail("invalid lun number", response);
+		return;
+	}
+
+	fb_flash_dev = lun;
+	fastboot_okay(NULL, response);
+}
+#endif
+
diff --git a/include/fastboot.h b/include/fastboot.h
index b106d617749..a4fb88e697d 100644
--- a/include/fastboot.h
+++ b/include/fastboot.h
@@ -53,6 +53,9 @@ enum {
 	FASTBOOT_COMMAND_OEM_BOARD,
 	FASTBOOT_COMMAND_ACMD,
 	FASTBOOT_COMMAND_UCMD,
+#if defined(CONFIG_FASTBOOT_FLASH_UFS)
+	FASTBOOT_COMMAND_SELECT_UFS_ACTIVE_LUN,
+#endif
 	FASTBOOT_COMMAND_COUNT
 };
 
diff --git a/include/fb_mmc.h b/include/fb_mmc.h
index 76ed7cd6be1..40464211769 100644
--- a/include/fb_mmc.h
+++ b/include/fb_mmc.h
@@ -39,4 +39,8 @@ void fastboot_mmc_flash_write(const char *cmd, void *download_buffer,
  * @response: Pointer to fastboot response buffer
  */
 void fastboot_mmc_erase(const char *cmd, char *response);
+
+#if defined(CONFIG_FASTBOOT_FLASH_UFS)
+void fastboot_select_ufs_active_lun(const char *cmd, char *response);
+#endif
 #endif
-- 
2.34.1

