From 9ee7bc67525e6d003b3443b48e43352dff0c8820 Mon Sep 17 00:00:00 2001
From: Balaji Selvanathan <quic_bselvana@quicinc.com>
Date: Thu, 3 Apr 2025 11:48:37 +0530
Subject: [PATCH] PENDING: Update fastboot oem format command to flash GPT for
 UFS

Updated "fastboot oem format" command to flash GPT for UFS/SCSI;
Previosly support was provided only for MMC; Also updated the
fastboot oem format command to get lun# and an uboot env variable
(that defines the partitions info) as inputs.
For example,
	fastboot oem format:1 partitions_info1
command will flash GPT (using uboot env variable partitions_info1)
of lun1.
If we dont give any arguments like,
	fastboot oem format
it will look for a uboot env variable called "partitions" and it
flashes GPT of lun# defined in CONFIG_FASTBOOT_FLASH_UFS_DEV.
If we give only lun# as argument like,
	fastboot oem format:1
it will look for a uboot env variable called "partitions" and it
flashes GPT of lun1.

Signed-off-by: Balaji Selvanathan <quic_bselvana@quicinc.com>
Upstream-Status: Pending
---
 configs/qcom_defconfig        |  3 +++
 drivers/fastboot/Kconfig      |  2 +-
 drivers/fastboot/fb_command.c | 43 +++++++++++++++++++++++++++--------
 3 files changed, 37 insertions(+), 11 deletions(-)

diff --git a/configs/qcom_defconfig b/configs/qcom_defconfig
index de244cb5a01..0b8e4dfe739 100644
--- a/configs/qcom_defconfig
+++ b/configs/qcom_defconfig
@@ -172,3 +172,6 @@ CONFIG_SHA512=y
 CONFIG_SHA384=y
 
 CONFIG_QCOM_POWER_DOMAIN=y
+
+CONFIG_CMD_GPT=y
+
diff --git a/drivers/fastboot/Kconfig b/drivers/fastboot/Kconfig
index 5c41fc4684b..899bd0e1ecb 100644
--- a/drivers/fastboot/Kconfig
+++ b/drivers/fastboot/Kconfig
@@ -232,7 +232,7 @@ config FASTBOOT_MBR_NAME
 
 config FASTBOOT_CMD_OEM_FORMAT
 	bool "Enable the 'oem format' command"
-	depends on FASTBOOT_FLASH_MMC && CMD_GPT
+	depends on (FASTBOOT_FLASH_MMC || FASTBOOT_FLASH_UFS) && CMD_GPT
 	help
 	  Add support for the "oem format" command from a client. This
 	  relies on the env variable partitions to contain the list of
diff --git a/drivers/fastboot/fb_command.c b/drivers/fastboot/fb_command.c
index c7037760f3d..b9b7a2d7c21 100644
--- a/drivers/fastboot/fb_command.c
+++ b/drivers/fastboot/fb_command.c
@@ -476,18 +476,41 @@ static void reboot_recovery(char *cmd_parameter, char *response)
  */
 static void __maybe_unused oem_format(char *cmd_parameter, char *response)
 {
-	char cmdbuf[32];
-	const int mmc_dev = config_opt_enabled(CONFIG_FASTBOOT_FLASH_MMC,
-					       CONFIG_FASTBOOT_FLASH_MMC_DEV, -1);
+#if IS_ENABLED(CONFIG_FASTBOOT_FLASH_UFS)
+	int devnum = config_val(FASTBOOT_FLASH_UFS_DEV);
+	char *dev = "scsi";
+#elif IS_ENABLED(CONFIG_FASTBOOT_FLASH_MMC)
+	int devnum = config_val(FASTBOOT_FLASH_MMC_DEV);
+	char *dev = "mmc";
+#endif
+	char cmdbuf[80];
+	char *env_varname = NULL;
+	char *partition_info = NULL;
+	char *space = NULL;
+
+	if (cmd_parameter && cmd_parameter[0] != '\0') {
+		devnum = simple_strtoul(cmd_parameter, &space, 10);
+		if (space && space[0] != '\0')
+			env_varname = space + 1;
+	}
+
+	if (!env_varname || env_varname[0] == '\0')
+		env_varname = "partitions";
 
-	if (!env_get("partitions")) {
-		fastboot_fail("partitions not set", response);
+	partition_info = env_get(env_varname);
+	if (!partition_info) {
+		snprintf(cmdbuf, sizeof(cmdbuf), "%s env variable not set", env_varname);
+		fastboot_fail(cmdbuf, response);
+		return;
+	}
+
+	snprintf(cmdbuf, sizeof(cmdbuf), "gpt write %s %x $%s", dev, devnum, env_varname);
+
+	if (run_command(cmdbuf, 0)) {
+		fastboot_fail("", response);
 	} else {
-		sprintf(cmdbuf, "gpt write mmc %x $partitions", mmc_dev);
-		if (run_command(cmdbuf, 0))
-			fastboot_fail("", response);
-		else
-			fastboot_okay(NULL, response);
+		printf("Wrote %s to GPT of LUN %d\n", env_varname, devnum);
+		fastboot_okay(NULL, response);
 	}
 }
 
-- 
2.34.1

