From 082d5d0ae3f4000b30522e4377aced7b9af26598 Mon Sep 17 00:00:00 2001
From: Balaji Selvanathan <quic_bselvana@quicinc.com>
Date: Mon, 17 Mar 2025 22:13:41 +0530
Subject: [PATCH] PENDING: I2C driver and IO Expander support for qcs9100

Added support for enabling I2C driver GCC clocks (for I2C-11 and I2C-18)
and GPIO pinctrl, Enabled IO Expander driver in config file and
added its corresponding entries in device tree file.

Signed-off-by: Balaji Selvanathan <quic_bselvana@quicinc.com>
Upstream-Status: Pending
---
 arch/arm/dts/qcs9100-ride-r3-u-boot.dtsi | 68 ++++++++++++++++++++++++
 cmd/i2c.c                                |  1 +
 configs/qcs9100_defconfig                |  1 +
 drivers/clk/qcom/clock-sa8775p.c         |  6 ++-
 drivers/pinctrl/qcom/pinctrl-sa8775p.c   | 57 ++++++++++++++++++++
 5 files changed, 132 insertions(+), 1 deletion(-)

diff --git a/arch/arm/dts/qcs9100-ride-r3-u-boot.dtsi b/arch/arm/dts/qcs9100-ride-r3-u-boot.dtsi
index 1c6d7e7c5de..20f556f1fe2 100644
--- a/arch/arm/dts/qcs9100-ride-r3-u-boot.dtsi
+++ b/arch/arm/dts/qcs9100-ride-r3-u-boot.dtsi
@@ -41,5 +41,73 @@
 			key-name-hint = "dev";
 		};
 	};
+	soc@0 {
+		geniqup@8c0000 {
+			i2c@890000 {
+				pinctrl-0 = <&qup_i2c18_default
+						&ioexp_intr_active
+						&ioexp_reset_active>;
+				ioexp: gpio@74 {
+					status = "okay";
+					compatible = "ti,tca9539";
+					#address-cells = <1>;
+					#size-cells = <0>;
+					reg = <0x74>;
+					interrupt-parent = <&tlmm>;
+					interrupts = <98 IRQ_TYPE_EDGE_BOTH>;
+					gpio-controller;
+					#gpio-cells = <2>;
+					interrupt-controller;
+					#interrupt-cells = <2>;
+
+					pinctrl-names = "default";
+					pinctrl-0 = <&dsi0_hpd_cfg_pins
+							&dsi0_cdet_cfg_pins
+							&dsi1_hpd_cfg_pins
+							&dsi1_cdet_cfg_pins>;
+
+					dsi0_hpd_cfg_pins: gpio2-cfg {
+						pins = "gpio2";
+						input-enable;
+						bias-disable;
+					};
+
+					dsi0_cdet_cfg_pins: gpio3-cfg {
+						pins = "gpio3";
+						bias-pull-down;
+					};
+
+					dsi1_hpd_cfg_pins: gpio10-cfg {
+						pins = "gpio10";
+						input-enable;
+						bias-disable;
+					};
+
+					dsi1_cdet_cfg_pins: gpio11-cfg {
+						pins = "gpio11";
+						bias-pull-down;
+					};
+				};
+			};
+		};
+
+		pinctrl@f000000 {
+			ioexp_intr_active: ioexp_intr_active {
+				pins = "gpio98";
+				function = "gpio";
+				drive-strength = <2>;
+				input-enable;
+				bias-disable;
+			};
+
+			ioexp_reset_active: ioexp_reset_active {
+				pins = "gpio97";
+				function = "gpio";
+				drive-strength = <2>;
+				bias-disable;
+				output-high;
+			};
+		};
+	};
 };
 
diff --git a/cmd/i2c.c b/cmd/i2c.c
index 7246c4fa3e7..6ecd8c0599f 100644
--- a/cmd/i2c.c
+++ b/cmd/i2c.c
@@ -947,6 +947,7 @@ static int do_i2c_probe(struct cmd_tbl *cmdtp, int flag, int argc,
 #else
 		ret = i2c_probe(j);
 #endif
+		udelay(20);
 		if (ret == 0) {
 			printf(" %02X", j);
 			found++;
diff --git a/configs/qcs9100_defconfig b/configs/qcs9100_defconfig
index 1cb23dee27e..1201753dd08 100644
--- a/configs/qcs9100_defconfig
+++ b/configs/qcs9100_defconfig
@@ -21,6 +21,7 @@ CONFIG_ENV_IS_IN_UFS=y
 CONFIG_SYS_LOAD_ADDR=0xD3500000
 CONFIG_CMD_BOOTQLI=y
 
+CONFIG_DM_PCA953X=y
 CONFIG_DEFAULT_DEVICE_TREE="qcom/qcs9100-ride-r3"
 # CONFIG_ENV_IS_DEFAULT is not set
 # CONFIG_ENV_IS_NOWHERE is not set
diff --git a/drivers/clk/qcom/clock-sa8775p.c b/drivers/clk/qcom/clock-sa8775p.c
index d4df77097b9..0f00df53c68 100644
--- a/drivers/clk/qcom/clock-sa8775p.c
+++ b/drivers/clk/qcom/clock-sa8775p.c
@@ -21,6 +21,8 @@
 #define USB30_SEC_MOCK_UTMI_CMD_RCGR		0x2f024
 #define USB30_SEC_MASTER_CMD_RCGR		0x2f028
 #define USB3_SEC_PHY_AUX_CMD_RCGR		0x2f06c
+#define GCC_QUPV3_WRAP2_S4_CLK_ENA_BIT BIT(8)
+#define GCC_QUPV3_WRAP1_S4_CLK_ENA_BIT BIT(26)
 
 static ulong sa8775p_set_rate(struct clk *clk, ulong rate)
 {
@@ -61,7 +63,9 @@ static const struct gate_clk sa8775p_clks[] = {
 	GATE_CLK(GCC_AGGRE_USB3_SEC_AXI_CLK, 0x2f088, 1),
 	GATE_CLK(GCC_USB30_SEC_SLEEP_CLK, 0x2f020, 1),
 	GATE_CLK(GCC_USB3_SEC_PHY_PIPE_CLK, 0x2f064, 1),
-	GATE_CLK(GCC_USB3_PRIM_PHY_PIPE_CLK, 0x1b064, 1)
+	GATE_CLK(GCC_USB3_PRIM_PHY_PIPE_CLK, 0x1b064, 1),
+	GATE_CLK(GCC_QUPV3_WRAP2_S4_CLK, 0x4b010, GCC_QUPV3_WRAP2_S4_CLK_ENA_BIT),
+	GATE_CLK(GCC_QUPV3_WRAP1_S4_CLK, 0x4b008, GCC_QUPV3_WRAP1_S4_CLK_ENA_BIT)
 };
 
 static int sa8775p_enable(struct clk *clk)
diff --git a/drivers/pinctrl/qcom/pinctrl-sa8775p.c b/drivers/pinctrl/qcom/pinctrl-sa8775p.c
index 64c262d893d..6cf806b91d1 100644
--- a/drivers/pinctrl/qcom/pinctrl-sa8775p.c
+++ b/drivers/pinctrl/qcom/pinctrl-sa8775p.c
@@ -12,6 +12,7 @@
 static char pin_name[MAX_PIN_NAME_LEN] __section(".data");
 
 typedef unsigned int msm_pin_function[10];
+#define SA8775_PIN_OFFSET 0x100000
 
 #define PINGROUP(id, f1, f2, f3, f4, f5, f6, f7, f8, f9)\
 	{					        \
@@ -540,11 +541,67 @@ static unsigned int sa8775p_get_function_mux(__maybe_unused unsigned int pin,
 
 }
 
+static const unsigned int sa8775p_pin_offsets[] = {
+	[0] = SA8775_PIN_OFFSET,    [1] = SA8775_PIN_OFFSET,    [2] = SA8775_PIN_OFFSET,
+	[3] = SA8775_PIN_OFFSET,    [4] = SA8775_PIN_OFFSET,    [5] = SA8775_PIN_OFFSET,
+	[6] = SA8775_PIN_OFFSET,   [7] = SA8775_PIN_OFFSET,   [8] = SA8775_PIN_OFFSET,
+	[9] = SA8775_PIN_OFFSET,   [10] = SA8775_PIN_OFFSET,   [11] = SA8775_PIN_OFFSET,
+	[12] = SA8775_PIN_OFFSET,  [13] = SA8775_PIN_OFFSET,  [14] = SA8775_PIN_OFFSET,
+	[15] = SA8775_PIN_OFFSET,  [16] = SA8775_PIN_OFFSET,  [17] = SA8775_PIN_OFFSET,
+	[18] = SA8775_PIN_OFFSET,  [19] = SA8775_PIN_OFFSET,  [20] = SA8775_PIN_OFFSET,
+	[21] = SA8775_PIN_OFFSET,  [22] = SA8775_PIN_OFFSET,  [23] = SA8775_PIN_OFFSET,
+	[24] = SA8775_PIN_OFFSET,  [25] = SA8775_PIN_OFFSET,  [26] = SA8775_PIN_OFFSET,
+	[27] = SA8775_PIN_OFFSET,   [28] = SA8775_PIN_OFFSET,   [29] = SA8775_PIN_OFFSET,
+	[30] = SA8775_PIN_OFFSET,   [31] = SA8775_PIN_OFFSET,  [32] = SA8775_PIN_OFFSET,
+	[33] = SA8775_PIN_OFFSET,  [34] = SA8775_PIN_OFFSET,   [35] = SA8775_PIN_OFFSET,
+	[36] = SA8775_PIN_OFFSET,  [37] = SA8775_PIN_OFFSET,  [38] = SA8775_PIN_OFFSET,
+	[39] = SA8775_PIN_OFFSET,  [40] = SA8775_PIN_OFFSET,  [41] = SA8775_PIN_OFFSET,
+	[42] = SA8775_PIN_OFFSET,   [43] = SA8775_PIN_OFFSET,   [44] = SA8775_PIN_OFFSET,
+	[45] = SA8775_PIN_OFFSET,   [46] = SA8775_PIN_OFFSET,   [47] = SA8775_PIN_OFFSET,
+	[48] = SA8775_PIN_OFFSET,   [49] = SA8775_PIN_OFFSET,   [50] = SA8775_PIN_OFFSET,
+	[51] = SA8775_PIN_OFFSET,  [52] = SA8775_PIN_OFFSET,  [53] = SA8775_PIN_OFFSET,
+	[54] = SA8775_PIN_OFFSET,  [55] = SA8775_PIN_OFFSET,  [56] = SA8775_PIN_OFFSET,
+	[57] = SA8775_PIN_OFFSET,  [58] = SA8775_PIN_OFFSET,  [59] = SA8775_PIN_OFFSET,
+	[60] = SA8775_PIN_OFFSET,  [61] = SA8775_PIN_OFFSET,  [62] = SA8775_PIN_OFFSET,
+	[63] = SA8775_PIN_OFFSET,  [64] = SA8775_PIN_OFFSET,  [65] = SA8775_PIN_OFFSET,
+	[66] = SA8775_PIN_OFFSET,  [67] = SA8775_PIN_OFFSET,  [68] = SA8775_PIN_OFFSET,
+	[69] = SA8775_PIN_OFFSET,  [70] = SA8775_PIN_OFFSET,   [71] = SA8775_PIN_OFFSET,
+	[72] = SA8775_PIN_OFFSET,   [73] = SA8775_PIN_OFFSET,   [74] = SA8775_PIN_OFFSET,
+	[75] = SA8775_PIN_OFFSET,   [76] = SA8775_PIN_OFFSET,   [77] = SA8775_PIN_OFFSET,
+	[78] = SA8775_PIN_OFFSET,   [79] = SA8775_PIN_OFFSET,  [80] = SA8775_PIN_OFFSET,
+	[81] = SA8775_PIN_OFFSET,  [82] = SA8775_PIN_OFFSET,  [83] = SA8775_PIN_OFFSET,
+	[84] = SA8775_PIN_OFFSET,  [85] = SA8775_PIN_OFFSET,   [86] = SA8775_PIN_OFFSET,
+	[87] = SA8775_PIN_OFFSET, [88] = SA8775_PIN_OFFSET,   [89] = SA8775_PIN_OFFSET,
+	[90] = SA8775_PIN_OFFSET, [91] = SA8775_PIN_OFFSET,  [92] = SA8775_PIN_OFFSET,
+	[93] = SA8775_PIN_OFFSET, [94] = SA8775_PIN_OFFSET,  [95] = SA8775_PIN_OFFSET,
+	[96] = SA8775_PIN_OFFSET, [97] = SA8775_PIN_OFFSET,  [98] = SA8775_PIN_OFFSET,
+	[99] = SA8775_PIN_OFFSET, [100] = SA8775_PIN_OFFSET, [101] = SA8775_PIN_OFFSET,
+	[102] = SA8775_PIN_OFFSET, [103] = SA8775_PIN_OFFSET, [104] = SA8775_PIN_OFFSET,
+	[105] = SA8775_PIN_OFFSET, [106] = SA8775_PIN_OFFSET, [107] = SA8775_PIN_OFFSET,
+	[108] = SA8775_PIN_OFFSET, [109] = SA8775_PIN_OFFSET, [110] = SA8775_PIN_OFFSET,
+	[111] = SA8775_PIN_OFFSET, [112] = SA8775_PIN_OFFSET, [113] = SA8775_PIN_OFFSET,
+	[114] = SA8775_PIN_OFFSET, [115] = SA8775_PIN_OFFSET, [116] = SA8775_PIN_OFFSET,
+	[117] = SA8775_PIN_OFFSET, [118] = SA8775_PIN_OFFSET, [119] = SA8775_PIN_OFFSET,
+	[120] = SA8775_PIN_OFFSET, [121] = SA8775_PIN_OFFSET,  [122] = SA8775_PIN_OFFSET,
+	[123] = SA8775_PIN_OFFSET, [124] = SA8775_PIN_OFFSET,  [125] = SA8775_PIN_OFFSET,
+	[126] = SA8775_PIN_OFFSET, [127] = SA8775_PIN_OFFSET,  [128] = SA8775_PIN_OFFSET,
+	[129] = SA8775_PIN_OFFSET, [130] = SA8775_PIN_OFFSET,  [131] = SA8775_PIN_OFFSET,
+	[132] = SA8775_PIN_OFFSET, [133] = SA8775_PIN_OFFSET,  [134] = SA8775_PIN_OFFSET,
+	[135] = SA8775_PIN_OFFSET, [136] = SA8775_PIN_OFFSET,  [137] = SA8775_PIN_OFFSET,
+	[138] = SA8775_PIN_OFFSET, [139] = SA8775_PIN_OFFSET,  [140] = SA8775_PIN_OFFSET,
+	[141] = SA8775_PIN_OFFSET, [142] = SA8775_PIN_OFFSET,  [143] = SA8775_PIN_OFFSET,
+	[144] = SA8775_PIN_OFFSET, [145] = SA8775_PIN_OFFSET,  [146] = SA8775_PIN_OFFSET,
+	[147] = SA8775_PIN_OFFSET, [148] = SA8775_PIN_OFFSET,  [148] = SA8775_PIN_OFFSET,
+	[149] = SA8775_PIN_OFFSET, [150] = SA8775_PIN_OFFSET,  [151] = SA8775_PIN_OFFSET,
+	[152] = SA8775_PIN_OFFSET, [153] = SA8775_PIN_OFFSET,  [154] = SA8775_PIN_OFFSET,
+};
+
 static const struct msm_pinctrl_data sa8775p_data = {
 	.pin_data = {
 		.pin_count = 155,
 		.special_pins_start = 149,
 		.special_pins_data = msm_special_pins_data,
+		.pin_offsets = sa8775p_pin_offsets,
 	},
 	.functions_count = ARRAY_SIZE(msm_pinctrl_functions),
 	.get_function_name = sa8775p_get_function_name,
-- 
2.34.1

