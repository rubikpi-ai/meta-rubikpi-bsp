From 957333b3a246e261bc44dada9aa9326c292982fb Mon Sep 17 00:00:00 2001
From: Aswin Murugan <quic_aswinm@quicinc.com>
Date: Wed, 5 Feb 2025 15:20:41 +0530
Subject: [PATCH] PENDING: mach-snapdragon: Save environment to partition

Support to save environment to partition

Signed-off-by: Aswin Murugan <quic_aswinm@quicinc.com>
Upstream-Status: Pending
---
 configs/qcs9100_defconfig |   3 +
 env/Kconfig               |   9 ++-
 env/Makefile              |   1 +
 env/env.c                 |   3 +
 env/ufs.c                 | 128 ++++++++++++++++++++++++++++++++++++++
 include/env_internal.h    |   1 +
 6 files changed, 144 insertions(+), 1 deletion(-)
 create mode 100644 env/ufs.c

diff --git a/configs/qcs9100_defconfig b/configs/qcs9100_defconfig
index 479f2a58bf..bbee62f417 100644
--- a/configs/qcs9100_defconfig
+++ b/configs/qcs9100_defconfig
@@ -17,5 +17,8 @@ CONFIG_DEBUG_UART_CLOCK=14745600
 # Address where U-Boot will be loaded
 CONFIG_TEXT_BASE=0xaf000000
 CONFIG_REMAKE_ELF=y
+CONFIG_ENV_IS_IN_UFS=y
 
 CONFIG_DEFAULT_DEVICE_TREE="qcom/qcs9100-ride-r3"
+# CONFIG_ENV_IS_DEFAULT is not set
+# CONFIG_ENV_IS_NOWHERE is not set
diff --git a/env/Kconfig b/env/Kconfig
index 031cf58186..8b847f94d0 100644
--- a/env/Kconfig
+++ b/env/Kconfig
@@ -61,7 +61,7 @@ config ENV_IS_DEFAULT
 		     !ENV_IS_IN_MMC && !ENV_IS_IN_NAND && \
 		     !ENV_IS_IN_NVRAM && !ENV_IS_IN_ONENAND && \
 		     !ENV_IS_IN_REMOTE && !ENV_IS_IN_SPI_FLASH && \
-		     !ENV_IS_IN_UBI
+		     !ENV_IS_IN_UBI && !ENV_IS_IN_UFS
 	select ENV_IS_NOWHERE
 
 config ENV_IS_NOWHERE
@@ -284,6 +284,13 @@ config ENV_IS_IN_NAND
 	  Currently, CONFIG_ENV_OFFSET_REDUND is not supported when
 	  using CONFIG_ENV_OFFSET_OOB.
 
+config ENV_IS_IN_UFS
+	bool "Environment in an MMC device"
+	depends on UFS
+	help
+	  Define this if you have an MMC device which you want to use for the
+	  environment.
+
 config ENV_RANGE
 	hex "Length of the region in which the environment can be written"
 	depends on ENV_IS_IN_NAND
diff --git a/env/Makefile b/env/Makefile
index a54e924d41..4a5de0dea1 100644
--- a/env/Makefile
+++ b/env/Makefile
@@ -27,5 +27,6 @@ obj-$(CONFIG_$(PHASE_)ENV_IS_IN_EXT4) += ext4.o
 obj-$(CONFIG_$(PHASE_)ENV_IS_IN_NAND) += nand.o
 obj-$(CONFIG_$(PHASE_)ENV_IS_IN_SPI_FLASH) += sf.o
 obj-$(CONFIG_$(PHASE_)ENV_IS_IN_FLASH) += flash.o
+obj-$(CONFIG_$(PHASE_)ENV_IS_IN_UFS) += ufs.o
 
 CFLAGS_embedded.o := -Wa,--no-warn -DENV_CRC=$(shell tools/envcrc 2>/dev/null)
diff --git a/env/env.c b/env/env.c
index bcc189e14d..4535af92ba 100644
--- a/env/env.c
+++ b/env/env.c
@@ -46,6 +46,9 @@ static enum env_location env_locations[] = {
 #ifdef CONFIG_ENV_IS_IN_MMC
 	ENVL_MMC,
 #endif
+#ifdef CONFIG_ENV_IS_IN_UFS
+	ENVL_UFS,
+#endif
 #ifdef CONFIG_ENV_IS_IN_NAND
 	ENVL_NAND,
 #endif
diff --git a/env/ufs.c b/env/ufs.c
new file mode 100644
index 0000000000..845aa635a2
--- /dev/null
+++ b/env/ufs.c
@@ -0,0 +1,128 @@
+// SPDX-License-Identifier: GPL-2.0+
+/*
+ * (C) Copyright 2008-2011 Freescale Semiconductor, Inc.
+ */
+
+/* #define DEBUG */
+
+#include <asm/global_data.h>
+
+#include <command.h>
+#include <env.h>
+#include <env_internal.h>
+#include <fdtdec.h>
+#include <linux/stddef.h>
+#include <malloc.h>
+#include <memalign.h>
+#include <part.h>
+#include <search.h>
+#include <errno.h>
+#include <dm/ofnode.h>
+
+
+DECLARE_GLOBAL_DATA_PTR;
+
+struct env_ufs_info {
+	struct blk_desc *blk;
+	struct disk_partition part;
+};
+
+static int env_ufs_get_blk(struct env_ufs_info *info)
+{
+	static int scsi_scanned;
+	struct blk_desc *blk;
+	int i, ret;
+
+	if (!scsi_scanned) {
+		scsi_scan(false /* no verbose */);
+		scsi_scanned = 1;
+	}
+
+	for (i = 0; i < blk_find_max_devnum(UCLASS_SCSI) + 1; i++) {
+		ret = blk_get_desc(UCLASS_SCSI, i, &blk);
+		if (ret)
+			continue;
+
+		ret = part_get_info_by_name(blk, "logdump", &info->part);
+		if (ret > 0) {
+			info->blk = blk;
+			return 0;
+		}
+	}
+
+	return -1;
+}
+
+static int env_ufs_save(void)
+{
+	int ret, count;
+	struct env_ufs_info info;
+
+	ALLOC_CACHE_ALIGN_BUFFER(env_t, env_new, 1);
+
+	if (env_ufs_get_blk(&info))
+		return -EIO;
+
+	ret = env_export(env_new);
+	if (ret)
+		return ret;
+
+	count = CONFIG_ENV_SIZE / info.part.blksz;
+
+	if (blk_dwrite(info.blk, info.part.start, count, env_new) != count)
+		return -EIO;
+
+	return 0;
+}
+
+static int env_ufs_erase(void)
+{
+	return 0;
+}
+
+#if defined(ENV_IS_EMBEDDED)
+static int env_ufs_load(void)
+{
+	return 0;
+}
+#else
+
+static int env_ufs_load(void)
+{
+	struct env_ufs_info info;
+	int ret, count;
+
+	if (env_ufs_get_blk(&info))
+		return -EIO;
+
+	ALLOC_CACHE_ALIGN_BUFFER(env_t, env, 1);
+
+	count = CONFIG_ENV_SIZE / info.part.blksz;
+
+	if (blk_dread(info.blk, info.part.start, count, env) != count) {
+		free(env);
+		return -EIO;
+	}
+
+	ret = env_import((char *)env, 1, H_EXTERNAL);
+	if (ret) {
+		printf("ENV import failed\n");
+		env_set_default("Cannot load environment", 0);
+	} else {
+		printf("ENV import pass\n");
+		gd->env_addr = (ulong)&env->data;
+	}
+
+	return ret;
+}
+#endif
+
+U_BOOT_ENV_LOCATION(ufs) = {
+	.location	= ENVL_UFS,
+	ENV_NAME("UFS")
+	.load		= env_ufs_load,
+#if defined(CONFIG_CMD_SAVEENV) && !defined(CONFIG_XPL_BUILD)
+	.save		= env_save_ptr(env_ufs_save),
+	.erase		= ENV_ERASE_PTR(env_ufs_erase)
+#endif
+};
diff --git a/include/env_internal.h b/include/env_internal.h
index c1c0727e4d..acc2ba19e8 100644
--- a/include/env_internal.h
+++ b/include/env_internal.h
@@ -114,6 +114,7 @@ enum env_location {
 	ENVL_REMOTE,
 	ENVL_SPI_FLASH,
 	ENVL_UBI,
+	ENVL_UFS,
 	ENVL_NOWHERE,
 
 	ENVL_COUNT,
-- 
2.34.1

