From 0a16d284404fad925d17fedb93ccaad82e60196e Mon Sep 17 00:00:00 2001
From: Vishwas Udupa <vudupa@qti.qualcomm.com>
Date: Sat, 8 Feb 2025 09:52:28 +0530
Subject: [PATCH] video: driver: fix life cycle of a buffer shared across
 multiple clients

Client might close the video session fd, while the dma buffer reference
is still held by some other client. In such scenario, put dma buf would
be called at some later point of time. Thereby while handling put call,
video instance context is already removed. This was leading to
unintended access. Fix is to keep the reference for video instance till
the buffer is finally freed.

Change-Id: If692f95b4540a44d45748ad142d3cc3a4e17f77a
Signed-off-by: Vikash Garodia <quic_vgarodia@quicinc.com>
upstream-status: Pending

---
 vidc/src/msm_vidc_vb2.c | 17 +++++++++--------
 1 file changed, 9 insertions(+), 8 deletions(-)

diff --git a/vidc/src/msm_vidc_vb2.c b/vidc/src/msm_vidc_vb2.c
index 98da34e5..cc76a7a7 100644
--- a/vidc/src/msm_vidc_vb2.c
+++ b/vidc/src/msm_vidc_vb2.c
@@ -80,15 +80,14 @@ void *msm_vb2_alloc(struct vb2_buffer *vb, struct device *dev,
 	buf = msm_vidc_fetch_buffer(inst, vb);
 	if (!buf) {
 		i_vpr_e(inst, "%s: failed to fetch buffer\n", __func__);
-		buf = NULL;
-		goto exit;
+		goto error;
 	}
 
 	region = call_mem_op(core, buffer_region, inst, buf_type);
 	cb = msm_vidc_get_context_bank_for_region(inst->core, region);
 	if (!cb) {
 		i_vpr_e(inst, "%s: failed to get context bank device\n", __func__);
-		goto exit;
+		goto error;
 	}
 
 	buf->inst = inst;
@@ -104,7 +103,7 @@ void *msm_vb2_alloc(struct vb2_buffer *vb, struct device *dev,
 				      buf->dma_attrs);
 	if (!buf->kvaddr) {
 		i_vpr_e(inst, "dma alloc of size %lu failed\n", size);
-		return ERR_PTR(-ENOMEM);
+		goto error;
 	}
 
 	buf->handler.refcount = &buf->refcount;
@@ -113,11 +112,12 @@ void *msm_vb2_alloc(struct vb2_buffer *vb, struct device *dev,
 
 	refcount_set(&buf->refcount, 1);
 
-exit:
-	if (!buf)
-		msm_vidc_change_state(inst, MSM_VIDC_ERROR, __func__);
-	put_inst(inst);
 	return buf;
+
+error:
+	msm_vidc_change_state(inst, MSM_VIDC_ERROR, __func__);
+	put_inst(inst);
+	return ERR_PTR(-ENOMEM);
 }
 
 void *msm_vb2_attach_dmabuf(struct vb2_buffer *vb, struct device *dev,
@@ -203,6 +203,7 @@ void msm_vb2_put(void *buf_priv)
 		buf->kvaddr = NULL;
 		buf->device_addr = 0x0;
 	}
+	put_inst(inst);
 }
 
 int msm_vb2_mmap(void *buf_priv, struct vm_area_struct *vma)
-- 
2.25.1

