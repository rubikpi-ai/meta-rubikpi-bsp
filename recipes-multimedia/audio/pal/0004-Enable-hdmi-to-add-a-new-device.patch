diff --git a/device/src/Hdmi.cpp b/device/src/Hdmi.cpp
new file mode 100644
index 0000000..fb472c7
--- /dev/null
+++ b/device/src/Hdmi.cpp
@@ -0,0 +1,66 @@
+/*
+ * Copyright (c) 2019, The Linux Foundation. All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions are
+ * met:
+ *     * Redistributions of source code must retain the above copyright
+ *       notice, this list of conditions and the following disclaimer.
+ *     * Redistributions in binary form must reproduce the above
+ *       copyright notice, this list of conditions and the following
+ *       disclaimer in the documentation and/or other materials provided
+ *       with the distribution.
+ *     * Neither the name of The Linux Foundation nor the names of its
+ *       contributors may be used to endorse or promote products derived
+ *       from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
+ * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
+ * ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
+ * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
+ * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
+ * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
+ * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
+ * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#define LOG_TAG "PAL: Hdmi"
+#include "Hdmi.h"
+#include "ResourceManager.h"
+#include "Device.h"
+#include "kvh2xml.h"
+
+std::shared_ptr<Device> Hdmi::obj = nullptr;
+
+std::shared_ptr<Device> Hdmi::getInstance(struct pal_device *device,
+                                             std::shared_ptr<ResourceManager> Rm)
+{
+    if (!obj) {
+        std::shared_ptr<Device> sp(new Hdmi(device, Rm));
+        obj = sp;
+    }
+    return obj;
+}
+
+std::shared_ptr<Device> Hdmi::getObject(pal_device_id_t id)
+{
+    if (obj) {
+        if (obj->getSndDeviceId() == id)
+            return obj;
+    }
+    return NULL;
+}
+
+Hdmi::Hdmi(struct pal_device *device, std::shared_ptr<ResourceManager> Rm) :
+Device(device, Rm)
+{
+
+}
+
+Hdmi::~Hdmi()
+{
+PAL_ERR(LOG_TAG, "dtor called");
+}
\ No newline at end of file
diff --git a/device/inc/Hdmi.h b/device/inc/Hdmi.h
new file mode 100644
index 0000000..e78d3eb
--- /dev/null
+++ b/device/inc/Hdmi.h
@@ -0,0 +1,49 @@
+/*
+ * Copyright (c) 2019-2020, The Linux Foundation. All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions are
+ * met:
+ *     * Redistributions of source code must retain the above copyright
+ *       notice, this list of conditions and the following disclaimer.
+ *     * Redistributions in binary form must reproduce the above
+ *       copyright notice, this list of conditions and the following
+ *       disclaimer in the documentation and/or other materials provided
+ *       with the distribution.
+ *     * Neither the name of The Linux Foundation nor the names of its
+ *       contributors may be used to endorse or promote products derived
+ *       from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
+ * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
+ * ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
+ * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
+ * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
+ * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
+ * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
+ * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+#ifndef HDMI_H
+#define HDMI_H
+
+#include "Device.h"
+#include "PalAudioRoute.h"
+
+class Hdmi : public Device
+{
+protected:
+    static std::shared_ptr<Device> obj;
+    Hdmi(struct pal_device *device, std::shared_ptr<ResourceManager> Rm);
+public:
+    static std::shared_ptr<Device> getInstance(struct pal_device *device,
+                                               std::shared_ptr<ResourceManager> Rm);
+    static std::shared_ptr<Device> getObject(pal_device_id_t id);
+    virtual ~Hdmi();
+};
+
+
+#endif //HDMI_H
diff --git a/device/src/Device.cpp b/device/src/Device.cpp
index 93e27d9..0d55bed 100644
--- a/device/src/Device.cpp
+++ b/device/src/Device.cpp
@@ -80,6 +80,7 @@
 #include "Handset.h"
 #include "Bluetooth.h"
 #include "DisplayPort.h"
+#include "Hdmi.h"
 #include "RTProxy.h"
 #include "FMDevice.h"
 #include "HapticsDev.h"
@@ -154,9 +155,11 @@ std::shared_ptr<Device> Device::getInstance(struct pal_device *device,
         return BtA2dp::getInstance(device, Rm);
     case PAL_DEVICE_OUT_AUX_DIGITAL:
     case PAL_DEVICE_OUT_AUX_DIGITAL_1:
-    case PAL_DEVICE_OUT_HDMI:
         PAL_VERBOSE(LOG_TAG, "Display Port device");
         return DisplayPort::getInstance(device, Rm);
+    case PAL_DEVICE_OUT_HDMI:
+        PAL_VERBOSE(LOG_TAG, "Hdmi device");
+        return Hdmi::getInstance(device, Rm);
     case PAL_DEVICE_IN_HEADSET_VA_MIC:
         PAL_VERBOSE(LOG_TAG, "HeadsetVaMic device");
         return HeadsetVaMic::getInstance(device, Rm);
@@ -233,9 +236,11 @@ std::shared_ptr<Device> Device::getObject(pal_device_id_t dev_id)
         return USB::getObject(dev_id);
     case PAL_DEVICE_OUT_AUX_DIGITAL:
     case PAL_DEVICE_OUT_AUX_DIGITAL_1:
-    case PAL_DEVICE_OUT_HDMI:
         PAL_VERBOSE(LOG_TAG, "Display Port device");
         return DisplayPort::getObject(dev_id);
+    case PAL_DEVICE_OUT_HDMI:
+        PAL_VERBOSE(LOG_TAG, "Hdmi device");
+        return Hdmi::getObject(dev_id);
     case PAL_DEVICE_IN_HANDSET_MIC:
         PAL_VERBOSE(LOG_TAG, "handset mic device");
         return HandsetMic::getObject();
diff --git a/Makefile.am b/Makefile.am
index 98d581f..5ef9558 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -27,6 +27,7 @@ h_sources = ${top_srcdir}/stream/inc/Stream.h \
             ${top_srcdir}/device/inc/Handset.h \
             ${top_srcdir}/device/inc/HandsetVaMic.h \
             ${top_srcdir}/device/inc/DisplayPort.h \
+            ${top_srcdir}/device/inc/Hdmi.h \
             ${top_srcdir}/device/inc/HeadsetVaMic.h \
             ${top_srcdir}/device/inc/RTProxy.h \
             ${top_srcdir}/device/inc/SpeakerProtection.h \
@@ -109,6 +110,7 @@ pal_sources = ${top_srcdir}/Pal.cpp \
               ${top_srcdir}/device/src/Handset.cpp \
               ${top_srcdir}/device/src/HandsetVaMic.cpp \
               ${top_srcdir}/device/src/DisplayPort.cpp \
+              ${top_srcdir}/device/src/Hdmi.cpp \
               ${top_srcdir}/device/src/HeadsetVaMic.cpp \
               ${top_srcdir}/device/src/RTProxy.cpp \
               ${top_srcdir}/device/src/SpeakerProtection.cpp \
diff --git a/resource_manager/src/ResourceManager.cpp b/resource_manager/src/ResourceManager.cpp
index 70d485a..8eb3f5d 100644
--- a/resource_manager/src/ResourceManager.cpp
+++ b/resource_manager/src/ResourceManager.cpp
@@ -3080,7 +3080,6 @@ int32_t ResourceManager::getDeviceConfig(struct pal_device *deviceattr,
             break;
         case PAL_DEVICE_OUT_AUX_DIGITAL:
         case PAL_DEVICE_OUT_AUX_DIGITAL_1:
-        case PAL_DEVICE_OUT_HDMI:
             {
                 std::shared_ptr<DisplayPort> dp_device;
                 dp_device = std::dynamic_pointer_cast<DisplayPort>
@@ -3178,6 +3177,12 @@ int32_t ResourceManager::getDeviceConfig(struct pal_device *deviceattr,
                     deviceattr->id,deviceattr->config.sample_rate,
                     deviceattr->config.bit_width);
             break;
+        case PAL_DEVICE_OUT_HDMI:
+            deviceattr->config.sample_rate = SAMPLINGRATE_48K;
+            deviceattr->config.ch_info.channels = CHANNELS_2;
+            deviceattr->config.bit_width = BITWIDTH_32;
+            deviceattr->config.aud_fmt_id = PAL_AUDIO_FMT_PCM_S32_LE;
+            break;
         default:
             //do nothing for rest of the devices
             break;
@@ -12599,8 +12604,7 @@ bool ResourceManager::isPluginDevice(pal_device_id_t id) {
 }
 
 bool ResourceManager::isDpDevice(pal_device_id_t id) {
-    if (id == PAL_DEVICE_OUT_AUX_DIGITAL || id == PAL_DEVICE_OUT_AUX_DIGITAL_1 ||
-        id == PAL_DEVICE_OUT_HDMI)
+    if (id == PAL_DEVICE_OUT_AUX_DIGITAL || id == PAL_DEVICE_OUT_AUX_DIGITAL_1)
         return true;
     else
         return false;
diff --git a/configs/qcm6490/resourcemanager_qcm6490_idp.xml b/configs/qcm6490/resourcemanager_qcm6490_idp.xml
index 4e9bbbe..7e62d70 100644
--- a/configs/qcm6490/resourcemanager_qcm6490_idp.xml
+++ b/configs/qcm6490/resourcemanager_qcm6490_idp.xml
@@ -360,7 +360,7 @@
         </in-device>
         <in-device>
             <id>PAL_DEVICE_IN_WIRED_HEADSET</id>
-            <back_end_name>CODEC_DMA-LPAIF_RXTX-TX-3</back_end_name>
+            <back_end_name>MI2S-LPAIF-TX-PRIMARY</back_end_name>
             <max_channels>1</max_channels>
             <channels>1</channels>
             <snd_device_name>headset-mic</snd_device_name>
@@ -718,7 +718,7 @@
         </out-device>
         <out-device>
             <id>PAL_DEVICE_OUT_WIRED_HEADPHONE</id>
-            <back_end_name>CODEC_DMA-LPAIF_RXTX-RX-0</back_end_name>
+            <back_end_name>MI2S-LPAIF-RX-PRIMARY</back_end_name>
             <max_channels>2</max_channels>
             <channels>2</channels>
             <fractional_sr>1</fractional_sr>
@@ -758,9 +758,10 @@
         </out-device>
         <out-device>
             <id>PAL_DEVICE_OUT_WIRED_HEADSET</id>
-            <back_end_name>CODEC_DMA-LPAIF_RXTX-RX-0</back_end_name>
+            <back_end_name>MI2S-LPAIF-RX-PRIMARY</back_end_name>
             <max_channels>2</max_channels>
             <channels>2</channels>
+            <samplerate>48000</samplerate>
             <fractional_sr>1</fractional_sr>
             <snd_device_name>headphones</snd_device_name>
         <!--HIFI Filter Headphones-Uncomment this when param key hifi_filter is true
@@ -858,14 +859,30 @@
         </out-device>
         <out-device>
             <id>PAL_DEVICE_OUT_HDMI</id>
-            <back_end_name>DISPLAY_PORT-RX</back_end_name>
-            <max_channels>32</max_channels>
+            <back_end_name>MI2S-LPAIF_RXTX-RX-PRIMARY</back_end_name>
+            <max_channels>2</max_channels>
             <channels>2</channels>
+            <samplerate>48000</samplerate>
+            <bit_width>32</bit_width>
             <fractional_sr>1</fractional_sr>
-            <snd_device_name>display-port</snd_device_name>
+            <snd_device_name>hdmi-out</snd_device_name>
             <usecase>
                 <name>PAL_STREAM_VOICE_CALL</name>
                 <priority>1</priority>
+                <samplerate>48000</samplerate>
+                <bit_width>32</bit_width>
+            </usecase>
+            <usecase>
+                <name>PAL_STREAM_VOIP_RX</name>
+                <priority>2</priority>
+                <samplerate>48000</samplerate>
+                <bit_width>32</bit_width>
+            </usecase>
+            <usecase>
+                <name>PAL_STREAM_LOW_LATENCY</name>
+                <priority>2</priority>
+                <samplerate>48000</samplerate>
+                <bit_width>32</bit_width>
             </usecase>
         </out-device>
         <out-device>
diff --git a/configs/qcm6490/mixer_paths_qcm6490_idp.xml b/configs/qcm6490/mixer_paths_qcm6490_idp.xml
index 47342f0..fd6ca18 100644
--- a/configs/qcm6490/mixer_paths_qcm6490_idp.xml
+++ b/configs/qcm6490/mixer_paths_qcm6490_idp.xml
@@ -439,24 +439,6 @@
     </path>
 
     <path name="headphones">
-        <ctl name="HPHL_RDAC Switch" value="1" />
-        <ctl name="HPHR_RDAC Switch" value="1" />
-        <ctl name="HPHL Switch" value="1" />
-        <ctl name="HPHR Switch" value="1" />
-        <ctl name="RX_HPH PWR Mode" value="LOHIFI" />
-        <ctl name="RX HPH Mode" value="CLS_AB_HIFI" />
-        <ctl name="RX_MACRO RX0 MUX" value="AIF1_PB" />
-        <ctl name="RX_MACRO RX1 MUX" value="AIF1_PB" />
-        <ctl name="RX INT0_1 MIX1 INP0" value="RX0" />
-        <ctl name="RX INT1_1 MIX1 INP0" value="RX1" />
-        <ctl name="RX INT0 DEM MUX" value="CLSH_DSM_OUT" />
-        <ctl name="RX INT1 DEM MUX" value="CLSH_DSM_OUT" />
-        <ctl name="RX_COMP1 Switch" value="1" />
-        <ctl name="RX_COMP2 Switch" value="1" />
-        <ctl name="RX_RX0 Digital Volume" value="80" />
-        <ctl name="RX_RX1 Digital Volume" value="80" />
-        <ctl name="HPHR Volume" value="20" />
-        <ctl name="HPHL Volume" value="20" />
     </path>
     <path name="line">
         <path name="headphones" />
@@ -469,6 +451,9 @@
     <path name="usb-headphones">
     </path>
 
+    <path name="hdmi-out">
+    </path>
+
     <path name="display-port">
     </path>
 
@@ -593,6 +578,9 @@
         <ctl name="LPI PCM Logging Enable" value="1" />
     </path>
 
+    <path name="PM_QOS_Vote">
+    </path>
+
     <!-- Dual MIC devices -->
     <path name="handset-dmic-endfire">
        <ctl name="VA_AIF1_CAP Mixer DEC0" value="1" />

