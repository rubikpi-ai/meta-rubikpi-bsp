From cea27cd6e90f7ba13a7957c0edd2002be1caa877 Mon Sep 17 00:00:00 2001
From: Yongxing Mou <quic_yongmou@quicinc.com>
Date: Wed, 5 Feb 2025 18:09:23 +0800
Subject: [PATCH 029/146] Revert "FROMLIST: drm/msm/dp: Add support for lane
 mapping configuration"

This reverts commit 194a1482e714fe7a37813548a797da3bcd387a99.

Signed-off-by: Yongxing Mou <quic_yongmou@quicinc.com>
Upstream-Status: Inappropriate [Revert]
---
 drivers/gpu/drm/msm/dp/dp_catalog.c | 11 ++++++-----
 drivers/gpu/drm/msm/dp/dp_catalog.h |  2 +-
 drivers/gpu/drm/msm/dp/dp_ctrl.c    |  2 +-
 drivers/gpu/drm/msm/dp/dp_display.c |  1 -
 drivers/gpu/drm/msm/dp/dp_panel.h   |  1 -
 drivers/gpu/drm/msm/dp/dp_parser.c  | 11 ++---------
 drivers/gpu/drm/msm/dp/dp_parser.h  |  1 -
 7 files changed, 10 insertions(+), 19 deletions(-)

diff --git a/drivers/gpu/drm/msm/dp/dp_catalog.c b/drivers/gpu/drm/msm/dp/dp_catalog.c
index 492ea4091c5e..5142aeb705a4 100644
--- a/drivers/gpu/drm/msm/dp/dp_catalog.c
+++ b/drivers/gpu/drm/msm/dp/dp_catalog.c
@@ -351,16 +351,17 @@ void dp_catalog_ctrl_config_ctrl(struct dp_catalog *dp_catalog, u32 cfg)
 	dp_write_link(catalog, REG_DP_CONFIGURATION_CTRL, cfg);
 }
 
-void dp_catalog_ctrl_lane_mapping(struct dp_catalog *dp_catalog, u32 *l_map)
+void dp_catalog_ctrl_lane_mapping(struct dp_catalog *dp_catalog)
 {
 	struct dp_catalog_private *catalog = container_of(dp_catalog,
 				struct dp_catalog_private, dp_catalog);
+	u32 ln_0 = 0, ln_1 = 1, ln_2 = 2, ln_3 = 3; /* One-to-One mapping */
 	u32 ln_mapping;
 
-	ln_mapping = l_map[0] << LANE0_MAPPING_SHIFT;
-	ln_mapping |= l_map[1] << LANE1_MAPPING_SHIFT;
-	ln_mapping |= l_map[2] << LANE2_MAPPING_SHIFT;
-	ln_mapping |= l_map[3] << LANE3_MAPPING_SHIFT;
+	ln_mapping = ln_0 << LANE0_MAPPING_SHIFT;
+	ln_mapping |= ln_1 << LANE1_MAPPING_SHIFT;
+	ln_mapping |= ln_2 << LANE2_MAPPING_SHIFT;
+	ln_mapping |= ln_3 << LANE3_MAPPING_SHIFT;
 
 	dp_write_link(catalog, REG_DP_LOGICAL2PHYSICAL_LANE_MAPPING,
 			ln_mapping);
diff --git a/drivers/gpu/drm/msm/dp/dp_catalog.h b/drivers/gpu/drm/msm/dp/dp_catalog.h
index 85b01753e24a..38786e855b51 100644
--- a/drivers/gpu/drm/msm/dp/dp_catalog.h
+++ b/drivers/gpu/drm/msm/dp/dp_catalog.h
@@ -91,7 +91,7 @@ u32 dp_catalog_aux_get_irq(struct dp_catalog *dp_catalog);
 /* DP Controller APIs */
 void dp_catalog_ctrl_state_ctrl(struct dp_catalog *dp_catalog, u32 state);
 void dp_catalog_ctrl_config_ctrl(struct dp_catalog *dp_catalog, u32 config);
-void dp_catalog_ctrl_lane_mapping(struct dp_catalog *dp_catalog, u32 *l_map);
+void dp_catalog_ctrl_lane_mapping(struct dp_catalog *dp_catalog);
 void dp_catalog_ctrl_mainlink_ctrl(struct dp_catalog *dp_catalog, bool enable);
 void dp_catalog_ctrl_psr_mainlink_enable(struct dp_catalog *dp_catalog, bool enable);
 void dp_catalog_ctrl_config_misc(struct dp_catalog *dp_catalog, u32 cc, u32 tb);
diff --git a/drivers/gpu/drm/msm/dp/dp_ctrl.c b/drivers/gpu/drm/msm/dp/dp_ctrl.c
index b795f341d913..5325728a4745 100644
--- a/drivers/gpu/drm/msm/dp/dp_ctrl.c
+++ b/drivers/gpu/drm/msm/dp/dp_ctrl.c
@@ -160,7 +160,7 @@ static void dp_ctrl_configure_source_params(struct dp_ctrl_private *ctrl)
 {
 	u32 cc, tb;
 
-	dp_catalog_ctrl_lane_mapping(ctrl->catalog, ctrl->panel->lane_map);
+	dp_catalog_ctrl_lane_mapping(ctrl->catalog);
 	dp_catalog_ctrl_mainlink_ctrl(ctrl->catalog, true);
 
 	dp_ctrl_config_ctrl(ctrl);
diff --git a/drivers/gpu/drm/msm/dp/dp_display.c b/drivers/gpu/drm/msm/dp/dp_display.c
index 73c6ee977203..46551b35a0ee 100644
--- a/drivers/gpu/drm/msm/dp/dp_display.c
+++ b/drivers/gpu/drm/msm/dp/dp_display.c
@@ -372,7 +372,6 @@ static int dp_display_process_hpd_high(struct dp_display_private *dp)
 
 	dp->panel->max_dp_lanes = dp->parser->max_dp_lanes;
 	dp->panel->max_dp_link_rate = dp->parser->max_dp_link_rate;
-	memcpy(dp->panel->lane_map, dp->parser->lane_map, DP_MAX_NUM_DP_LANES * sizeof(u32));
 
 	drm_dbg_dp(dp->drm_dev, "max_lanes=%d max_link_rate=%d\n",
 		dp->panel->max_dp_lanes, dp->panel->max_dp_link_rate);
diff --git a/drivers/gpu/drm/msm/dp/dp_panel.h b/drivers/gpu/drm/msm/dp/dp_panel.h
index 8f934c7df6f0..a0dfc579c5f9 100644
--- a/drivers/gpu/drm/msm/dp/dp_panel.h
+++ b/drivers/gpu/drm/msm/dp/dp_panel.h
@@ -47,7 +47,6 @@ struct dp_panel {
 	bool video_test;
 
 	u32 vic;
-	u32 lane_map[4];
 	u32 max_dp_lanes;
 	u32 max_dp_link_rate;
 
diff --git a/drivers/gpu/drm/msm/dp/dp_parser.c b/drivers/gpu/drm/msm/dp/dp_parser.c
index ea663aad4c0f..7032dcc8842b 100644
--- a/drivers/gpu/drm/msm/dp/dp_parser.c
+++ b/drivers/gpu/drm/msm/dp/dp_parser.c
@@ -118,9 +118,7 @@ static u32 dp_parser_link_frequencies(struct device_node *of_node)
 static int dp_parser_misc(struct dp_parser *parser)
 {
 	struct device_node *of_node = parser->pdev->dev.of_node;
-	struct device_node *endpoint;
 	int cnt;
-	u32 lane_map[DP_MAX_NUM_DP_LANES] = {0, 1, 2, 3};
 
 	/*
 	 * data-lanes is the property of dp_out endpoint
@@ -131,15 +129,10 @@ static int dp_parser_misc(struct dp_parser *parser)
 		cnt = drm_of_get_data_lanes_count(of_node, 1, DP_MAX_NUM_DP_LANES);
 	}
 
-	if (cnt > 0) {
+	if (cnt > 0)
 		parser->max_dp_lanes = cnt;
-		endpoint = of_graph_get_endpoint_by_regs(of_node, 1, -1);
-		of_property_read_u32_array(endpoint, "data-lanes", lane_map, cnt);
-	} else {
+	else
 		parser->max_dp_lanes = DP_MAX_NUM_DP_LANES; /* 4 lanes */
-	}
-
-	memcpy(parser->lane_map, lane_map, parser->max_dp_lanes * sizeof(u32));
 
 	parser->max_dp_link_rate = dp_parser_link_frequencies(of_node);
 	if (!parser->max_dp_link_rate)
diff --git a/drivers/gpu/drm/msm/dp/dp_parser.h b/drivers/gpu/drm/msm/dp/dp_parser.h
index ade0e7ec6dfc..1f068626d445 100644
--- a/drivers/gpu/drm/msm/dp/dp_parser.h
+++ b/drivers/gpu/drm/msm/dp/dp_parser.h
@@ -119,7 +119,6 @@ struct dp_parser {
 	struct dp_pinctrl pinctrl;
 	struct dp_io io;
 	struct dp_display_data disp_data;
-	u32 lane_map[DP_MAX_NUM_DP_LANES];
 	u32 max_dp_lanes;
 	u32 max_dp_link_rate;
 	struct drm_bridge *next_bridge;
-- 
2.34.1

